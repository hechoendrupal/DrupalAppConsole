{% extends "base/class.php.twig" %}

{% block file_path %}
Drupal\{{module_name}}\Command\{{ name.class }}.
{% endblock %}

{% block namespace_class %}
namespace Drupal\{{module_name}}\Command;
{% endblock %}

{% block use_class %}
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;
use Drupal\AppConsole\Command\ContainerAwareCommand;
{% endblock %}

{% block class_declaration %}
/**
 * Class {{ name.class }}.
 *
 * @package Drupal\{{module_name}}
 */
class {{ name.class }} extends ContainerAwareCommand {% endblock %}

{% block class_methods %}
  /**
   * {@inheritdoc}
   */
  protected function configure() {
    $this
      ->setName('{{ command }}')
      ->setDescription($this->trans('{{ command_key_root }}.description'))
      ->addArgument('name', InputArgument::OPTIONAL, $this->trans('{{ command_key_root }}.arguments.name'))
      ->addOption('yell', NULL, InputOption::VALUE_NONE, $this->trans('{{ command_key_root }}.options.yell'));
  }

  /**
   * {@inheritdoc}
   */
  protected function execute(InputInterface $input, OutputInterface $output) {
    $name = $input->getArgument('name');
    if ($name) {
      $text = 'Hello ' . $name;
    }
    else {
      $text = 'Hello';
    }

    $text = sprintf(
      '%s, %s: %s',
      $text,
      'I am a new generated command for the module',
      $this->getModule()
    );

    if ($input->getOption('yell')) {
      $text = strtoupper($text);
    }

    $output->writeln($text);
  }
{% endblock %}
